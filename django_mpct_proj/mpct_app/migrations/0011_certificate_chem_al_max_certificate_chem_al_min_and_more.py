# Generated by Django 5.0 on 2023-12-13 15:31

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mpct_app', '0010_alter_material_chem_al_min_alter_material_chem_b_min_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='certificate',
            name='chem_al_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Aluminum, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_al_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Aluminum, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_b_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Boron, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_b_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Boron, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_c_equivalent',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='C Equivalent , max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_c_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Carbon, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_c_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Carbon, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_ca_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Calcium, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_ca_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Calcium, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_co_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Cobalt, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_co_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cobalt, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_cr_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Chromium, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_cr_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Chromium, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_cu_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Copper, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_cu_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Copper, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_fe_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Iron, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_fe_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Iron, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_mn_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Manganese, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_mn_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Manganese, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_mo_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Molybdenum, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_mo_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Molybdenum, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_n_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Nitrogen, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_n_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nitrogen, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_nb_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Niobium, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_nb_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Niobium, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_ni_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Nickel, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_ni_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Nickel, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_p_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Phosphorus, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_p_min',
            field=models.DecimalField(decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Phosphorus, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_s_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Sulfur max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_s_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Sulfur min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_si_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Silicon, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_si_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_ti_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Titanium, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_ti_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Titanium, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_v_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Vanadium, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_v_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Vanadium, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_w_max',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, verbose_name='Tungsten, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='chem_w_min',
            field=models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Tungsten, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_hardness_max',
            field=models.IntegerField(blank=True, null=True, verbose_name='Hardness, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_hardness_units',
            field=models.CharField(blank=True, choices=[('HB', 'Brinell'), ('HV', 'Vickers'), ('HRC', 'Rockwell C'), ('HRB', 'Rockwell B'), ('HRA', 'Rockwell A')], default='HB', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_strength_units',
            field=models.CharField(blank=True, choices=[('MPa', 'Megapascal'), ('PSI', 'Pounds per square inch'), ('KSI', 'Kilopounds per square inch')], default='MPa', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_tensile_strength_max',
            field=models.IntegerField(blank=True, null=True, verbose_name='TS, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_tensile_strength_min',
            field=models.IntegerField(blank=True, null=True, verbose_name='TS, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_toughness_mean',
            field=models.IntegerField(blank=True, null=True, verbose_name='Impact Test, Average'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_toughness_min',
            field=models.IntegerField(blank=True, null=True, verbose_name='Impact Test, Minimum'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_toughness_size',
            field=models.CharField(blank=True, choices=[('10x10', '10x10'), ('7.5x10', '7.5x10'), ('5x10', '5x10'), ('2.5x10', '2.5x10')], default='10x10', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_toughness_units',
            field=models.CharField(blank=True, choices=[('J', 'Joule')], default='J', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_yield_strength_max',
            field=models.IntegerField(blank=True, null=True, verbose_name='YS, max'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='mech_yield_strength_min',
            field=models.IntegerField(blank=True, null=True, verbose_name='YS, min'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='supp_ddwt',
            field=models.BinaryField(blank=True, null=True, verbose_name='Drop-Down Tear Test'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='supp_fpbt',
            field=models.BinaryField(blank=True, null=True, verbose_name='Four Point Bend test'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='supp_hic',
            field=models.BinaryField(blank=True, null=True, verbose_name='Supplementary HIC test'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='supp_mech_toughness_mean',
            field=models.IntegerField(blank=True, null=True, verbose_name='Supplementary Impact Test, Aver.'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='supp_mech_toughness_min',
            field=models.IntegerField(blank=True, null=True, verbose_name='Supplementary Impact Test, Min.'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='supp_nace',
            field=models.BinaryField(blank=True, null=True, verbose_name='NACE'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='supp_scct',
            field=models.BinaryField(blank=True, null=True, verbose_name='Stress Corrosion Cracking test'),
        ),
        migrations.AlterField(
            model_name='material',
            name='mech_strength_units',
            field=models.CharField(blank=True, choices=[('MPa', 'Megapascal'), ('PSI', 'Pounds per square inch'), ('KSI', 'Kilopounds per square inch')], default='MPa', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='material',
            name='mech_tensile_strength_max',
            field=models.IntegerField(blank=True, null=True, verbose_name='TS, max'),
        ),
        migrations.AlterField(
            model_name='material',
            name='mech_tensile_strength_min',
            field=models.IntegerField(blank=True, null=True, verbose_name='TS, min'),
        ),
        migrations.AlterField(
            model_name='material',
            name='mech_yield_strength_max',
            field=models.IntegerField(blank=True, null=True, verbose_name='YS, max'),
        ),
        migrations.AlterField(
            model_name='material',
            name='mech_yield_strength_min',
            field=models.IntegerField(blank=True, null=True, verbose_name='YS, min'),
        ),
    ]
